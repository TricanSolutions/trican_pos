/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package viewer;

import com.ConstantData;
import com.DBQueryEngine;
import com.DateUp;
import com.Empty;
import com.Format;
import com.Messages;
import com.Validation;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.DB;

/**
 *
 * @author Sudaraka Ranasinghe
 */
//secbuzman = second suppler
public class GrnPayment extends javax.swing.JDialog {

    Grn grn;

    public GrnPayment(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public GrnPayment(java.awt.Frame parent, Grn gr, boolean modal, String grandfinalamount) {
        super(parent, modal);
        initComponents();

        this.grn = gr;
        lblgrandamount.setText(grandfinalamount);
        firstLoad();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblpaymentmethod = new javax.swing.JLabel();
        cmbpaymethod = new javax.swing.JComboBox();
        lbldate = new javax.swing.JLabel();
        txtfDate = new javax.swing.JFormattedTextField();
        jPanel3 = new javax.swing.JPanel();
        lblfname = new javax.swing.JLabel();
        txtfirstname = new javax.swing.JTextField();
        lbllastname = new javax.swing.JLabel();
        txtlastname = new javax.swing.JTextField();
        lblnic = new javax.swing.JLabel();
        lblcontact1 = new javax.swing.JLabel();
        lblcompany = new javax.swing.JLabel();
        lblid = new javax.swing.JLabel();
        txtsupid = new javax.swing.JTextField();
        txtfcontact1 = new javax.swing.JFormattedTextField();
        txtnic = new javax.swing.JTextField();
        txtcompany = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblbuzman = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        lblgrandamount = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        lblbalance = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        lbldueamount = new javax.swing.JLabel();
        lblcashpay = new javax.swing.JLabel();
        txtcashamount = new javax.swing.JTextField();
        btnclear = new javax.swing.JButton();
        btnsubmit = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        lblpaid = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        lblbankname = new javax.swing.JLabel();
        cmbbankname = new javax.swing.JComboBox();
        lblchequenum = new javax.swing.JLabel();
        txtchequeno = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtbankcode = new javax.swing.JTextField();
        lblchequedate = new javax.swing.JLabel();
        txtfchequedate = new javax.swing.JFormattedTextField();
        lblchequeamount = new javax.swing.JLabel();
        txtchequeamount = new javax.swing.JTextField();
        lblchequdetails = new javax.swing.JLabel();
        cmbchequedetails = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblcheque = new javax.swing.JTable();
        btncheque = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lblchequenetamount = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtcardamount = new javax.swing.JTextField();

        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 51, 51));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("GRN Payment");
        jLabel1.setOpaque(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblpaymentmethod.setText("Payment Method");

        cmbpaymethod.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select--", "Credit Payment", "Cash Only", "Cheque Only", "Card Payment Only", "Multiple Payment" }));
        cmbpaymethod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbpaymethodActionPerformed(evt);
            }
        });
        cmbpaymethod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbpaymethodKeyPressed(evt);
            }
        });

        lbldate.setText("Date");

        try {
            txtfDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-##-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtfDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfDateKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblpaymentmethod)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbpaymethod, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lbldate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtfDate, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblpaymentmethod)
                    .addComponent(cmbpaymethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbldate)
                    .addComponent(txtfDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Supplier Details"));

        lblfname.setText("First Name*");

        txtfirstname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfirstnameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfirstnameKeyReleased(evt);
            }
        });

        lbllastname.setText("Last Name*");

        txtlastname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtlastnameKeyPressed(evt);
            }
        });

        lblnic.setText("NIC");

        lblcontact1.setText("Contact No 1*");

        lblcompany.setText("Company");

        lblid.setText("ID");

        txtsupid.setEditable(false);

        try {
            txtfcontact1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###-#######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtfcontact1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfcontact1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfcontact1KeyReleased(evt);
            }
        });

        txtnic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtnicKeyPressed(evt);
            }
        });

        txtcompany.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcompanyKeyReleased(evt);
            }
        });

        tblbuzman.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Contact 1", "Company"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblbuzman.getTableHeader().setReorderingAllowed(false);
        tblbuzman.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblbuzmanMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblbuzman);
        if (tblbuzman.getColumnModel().getColumnCount() > 0) {
            tblbuzman.getColumnModel().getColumn(0).setPreferredWidth(5);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblid)
                            .addComponent(lbllastname)
                            .addComponent(lblfname))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtsupid, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtfirstname, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 62, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtlastname, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblcompany)
                        .addGap(42, 42, 42)
                        .addComponent(txtcompany, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblcontact1)
                            .addComponent(lblnic))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtnic, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtfcontact1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblid)
                    .addComponent(txtsupid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblfname)
                    .addComponent(txtfirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbllastname)
                    .addComponent(txtlastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblcontact1)
                    .addComponent(txtfcontact1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblnic)
                    .addComponent(txtnic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtcompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblcompany))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Cash Payment & Summary"));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("Grand Amount Rs.");

        lblgrandamount.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblgrandamount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblgrandamount.setText("0.0");

        jLabel17.setText("Balance Amount Rs.");

        lblbalance.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblbalance.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblbalance.setText("0.0");

        jLabel19.setText("Due Amount Rs.");

        lbldueamount.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbldueamount.setForeground(new java.awt.Color(255, 51, 51));
        lbldueamount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbldueamount.setText("0.0");

        lblcashpay.setText("Cash Amount Rs.");

        txtcashamount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtcashamount.setText("0.0");
        txtcashamount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcashamountKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcashamountKeyReleased(evt);
            }
        });

        btnclear.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnclear.setText("Clear");
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });

        btnsubmit.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnsubmit.setText("Submit");
        btnsubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsubmitActionPerformed(evt);
            }
        });

        jLabel18.setText("Pay Amount Rs.");

        lblpaid.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblpaid.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblpaid.setText("0.0");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(0, 266, Short.MAX_VALUE)
                        .addComponent(btnclear, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblgrandamount, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnsubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel7Layout.createSequentialGroup()
                                    .addComponent(lblcashpay)
                                    .addGap(31, 31, 31)
                                    .addComponent(txtcashamount, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                                    .addComponent(jLabel17)
                                    .addGap(18, 18, 18)
                                    .addComponent(lblbalance, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                                    .addComponent(jLabel19)
                                    .addGap(36, 36, 36)
                                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(lblpaid, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                                        .addComponent(lbldueamount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(lblgrandamount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblcashpay)
                    .addComponent(txtcashamount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(lblpaid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(lblbalance))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(lbldueamount))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnclear, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnsubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Cheque Payment"));

        lblbankname.setText("Bank Name*");

        cmbbankname.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select--", "BOC", "Sampath", "HNB", "Commercial", "Nation Trust" }));
        cmbbankname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbbanknameActionPerformed(evt);
            }
        });
        cmbbankname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbbanknameKeyPressed(evt);
            }
        });

        lblchequenum.setText("Cheque No*");

        txtchequeno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtchequenoKeyPressed(evt);
            }
        });

        jLabel12.setText("Bank Code");

        txtbankcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtbankcodeKeyPressed(evt);
            }
        });

        lblchequedate.setText("Cheque Date*");

        try {
            txtfchequedate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-##-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtfchequedate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfchequedateKeyPressed(evt);
            }
        });

        lblchequeamount.setText("Amount Rs.*");

        txtchequeamount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtchequeamount.setText("0.0");
        txtchequeamount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtchequeamountKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtchequeamountKeyReleased(evt);
            }
        });

        lblchequdetails.setText("Details*");

        cmbchequedetails.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select--", "Cash Cheque", "Date Cheque", "Cross Cheque" }));
        cmbchequedetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbchequedetailsActionPerformed(evt);
            }
        });
        cmbchequedetails.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbchequedetailsKeyPressed(evt);
            }
        });

        tblcheque.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bank Name", "Cheque No", "Bank Code", "Cheque Date", "Details", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblcheque.getTableHeader().setReorderingAllowed(false);
        tblcheque.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblchequeMouseClicked(evt);
            }
        });
        tblcheque.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblchequeKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblcheque);

        btncheque.setText("Apply");
        btncheque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnchequeActionPerformed(evt);
            }
        });

        jLabel3.setText("Net Amount Rs.");

        lblchequenetamount.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblchequenetamount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblchequenetamount.setText("0.0");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblbankname)
                                    .addComponent(lblchequenum))
                                .addGap(20, 20, 20)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbbankname, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtchequeno, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblchequedate)
                            .addComponent(jLabel12)
                            .addComponent(lblchequeamount)
                            .addComponent(lblchequdetails))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtchequeamount)
                            .addComponent(txtbankcode)
                            .addComponent(txtfchequedate)
                            .addComponent(cmbchequedetails, 0, 129, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addComponent(btncheque, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(lblchequenetamount, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblbankname)
                    .addComponent(cmbbankname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblchequenum)
                    .addComponent(txtchequeno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtbankcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblchequedate)
                    .addComponent(txtfchequedate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblchequdetails)
                    .addComponent(cmbchequedetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtchequeamount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblchequeamount)
                    .addComponent(btncheque))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblchequenetamount))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Card Payment"));

        jLabel4.setText("Card Amount Rs.");

        txtcardamount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtcardamount.setText("0.0");
        txtcardamount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcardamountActionPerformed(evt);
            }
        });
        txtcardamount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcardamountKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtcardamount, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtcardamount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmbpaymethodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbpaymethodKeyPressed
        if (evt.getKeyCode() == 10) {
            txtfDate.grabFocus();

        }
    }//GEN-LAST:event_cmbpaymethodKeyPressed

    private void txtfDateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfDateKeyPressed
        if (evt.getKeyCode() == 10) {
            txtfirstname.grabFocus();

        }
    }//GEN-LAST:event_txtfDateKeyPressed

    private void txtfirstnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfirstnameKeyPressed
        if (evt.getKeyCode() == 10) {
            txtlastname.grabFocus();

        } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            txtcashamount.grabFocus();
            txtcashamount.selectAll();
        }
    }//GEN-LAST:event_txtfirstnameKeyPressed

    private void txtlastnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtlastnameKeyPressed
        if (evt.getKeyCode() == 10) {
            txtnic.grabFocus();

        }
    }//GEN-LAST:event_txtlastnameKeyPressed

    private void cmbbanknameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbbanknameKeyPressed
        if (evt.getKeyCode() == 10) {
            txtchequeno.grabFocus();

        } else if (evt.getKeyCode() == KeyEvent.VK_F1) {

            txtcashamount.grabFocus();
            txtcashamount.selectAll();
        }
    }//GEN-LAST:event_cmbbanknameKeyPressed

    private void txtchequenoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtchequenoKeyPressed
        if (evt.getKeyCode() == 10) {
            txtbankcode.grabFocus();

        }
    }//GEN-LAST:event_txtchequenoKeyPressed

    private void txtbankcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbankcodeKeyPressed
        if (evt.getKeyCode() == 10) {
            txtfchequedate.grabFocus();

        }
    }//GEN-LAST:event_txtbankcodeKeyPressed

    private void txtfchequedateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfchequedateKeyPressed
        if (evt.getKeyCode() == 10) {
            cmbchequedetails.grabFocus();

        }
    }//GEN-LAST:event_txtfchequedateKeyPressed

    private void cmbchequedetailsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbchequedetailsKeyPressed
        if (evt.getKeyCode() == 10) {
            txtchequeamount.grabFocus();
            txtchequeamount.selectAll();

        }
    }//GEN-LAST:event_cmbchequedetailsKeyPressed

    private void txtchequeamountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtchequeamountKeyPressed
        if (evt.getKeyCode() == 10) {
            btncheque.grabFocus();

        }
    }//GEN-LAST:event_txtchequeamountKeyPressed

    private void txtcashamountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcashamountKeyPressed
        if (evt.getKeyCode() == 10) {
            btnsubmit.grabFocus();

        }
    }//GEN-LAST:event_txtcashamountKeyPressed

    private void txtchequeamountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtchequeamountKeyReleased
        Validation.validatedouble(txtchequeamount);
    }//GEN-LAST:event_txtchequeamountKeyReleased

    private void txtcashamountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcashamountKeyReleased
        Validation.validatedouble(txtcashamount);
        if (!txtcashamount.getText().isEmpty()) {
            if (cmbpaymethod.getSelectedIndex() != 0) {
                AllFinalCalculations();
            } else {
                cmbpaymethod.grabFocus();
            }

        } else {
            clearCashamount();
            AllFinalCalculations();
        }
    }//GEN-LAST:event_txtcashamountKeyReleased

    private void cmbpaymethodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbpaymethodActionPerformed
        if (cmbpaymethod.getSelectedIndex() != 0) {
            feildsEnable();
            AllFinalCalculations();
        }
    }//GEN-LAST:event_cmbpaymethodActionPerformed

    private void txtfcontact1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfcontact1KeyPressed
        if (evt.getKeyCode() == 10) {
            txtcompany.grabFocus();
        }
    }//GEN-LAST:event_txtfcontact1KeyPressed

    private void txtfcontact1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfcontact1KeyReleased


    }//GEN-LAST:event_txtfcontact1KeyReleased

    private void btnchequeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnchequeActionPerformed
        if (Empty.ComboBox(cmbbankname, Empty.Text + lblbankname.getText())) {
        } else if (Empty.TxtFieldEmpty(txtchequeno, Empty.Text + lblchequenum.getText())) {
        } else if (Empty.DateFormatedFeild(txtfchequedate, Empty.Text + lblchequedate.getText())) {
        } else if (Empty.ComboBox(cmbchequedetails, Empty.Text + lblchequdetails.getText())) {
        } else if (Empty.TxtFieldEmpty(txtchequeamount, Empty.Text + lblchequeamount.getText())) {
        } else if (cmbpaymethod.getSelectedIndex() == 0) {
            cmbpaymethod.grabFocus();
        } else if (isnotAvilablethisCheque()) {
            if (Double.parseDouble(txtchequeamount.getText()) > 0) {
                addChequeDetailstoTable();
            }

        }
    }//GEN-LAST:event_btnchequeActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

    }//GEN-LAST:event_formWindowClosing

    private void tblchequeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblchequeKeyPressed
        if (tblcheque.getRowCount() != 0) {
            if (evt.getKeyCode() == 127) {
                DeleteCheque();
                AllFinalCalculations();
            }
        }
    }//GEN-LAST:event_tblchequeKeyPressed

    private void tblchequeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblchequeMouseClicked

        if (tblcheque.getRowCount() != 0) {
            if (evt.getClickCount() == 2) {
                LoadChequeDetailsintoFeilds();
                AllFinalCalculations();
            }

        }


    }//GEN-LAST:event_tblchequeMouseClicked

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        clearAll();
    }//GEN-LAST:event_btnclearActionPerformed

    private void btnsubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsubmitActionPerformed

        if (Empty.ComboBox(cmbpaymethod, Empty.Text + lblpaymentmethod.getText())) {

        } else if (Empty.DateFormatedFeild(txtfDate, Empty.Text + lbldate.getText())) {
        } else if (Empty.TxtFieldEmpty(txtfirstname, Empty.Text + lblfname.getText())) {
        } else if (Empty.TxtFieldEmpty(txtlastname, Empty.Text + lbllastname.getText())) {
        } else if (Empty.ContactNumberFormatedFeild(txtfcontact1, Empty.Text + lblcontact1.getText())) {
            //} else if (Empty.TxtFieldEmpty(txtcompany, Empty.Text + lblcompany.getText())) {
        } else if (cmbpaymethod.getSelectedIndex() == 3) {// cheque

            if (tblcheque.getRowCount() != 0 && Double.parseDouble(lblchequenetamount.getText()) > 0) {
                grn.saveAllGRNDetails();
            } else {
                Messages.warningjoption("Please Enter Cheque Details ! ");
            }

//   
        } else if (cmbpaymethod.getSelectedIndex() == 2) {// cash
            if (Double.parseDouble(txtcashamount.getText()) > 0) {
                grn.saveAllGRNDetails();
            } else {
                Messages.warningjoption("Please Enter Cash Amount ! ");
            }
        } else if (cmbpaymethod.getSelectedIndex() == 4) {// card
            if (Double.parseDouble(txtcardamount.getText()) > 0) {
                grn.saveAllGRNDetails();
            } else {
                Messages.warningjoption("Please Enter Card Amount ! ");
            }

        } else if (cmbpaymethod.getSelectedIndex() == 1) {// credit
            lblpaid.setText("0.0");
            lblbalance.setText("0.0");
            lbldueamount.setText("0.0");
            txtcashamount.setText("0.0");
            txtcardamount.setText("0.0");
            lblchequenetamount.setText("0.0");
            lbldueamount.setText(lblgrandamount.getText().trim());
            grn.saveAllGRNDetails();
        } else if (cmbpaymethod.getSelectedIndex() == 5) { // multiple

            if (Double.parseDouble(lblpaid.getText()) > 0) {
                grn.saveAllGRNDetails();
            } else {
                Messages.warningjoption("Please Increase Pay Amount ! ");
            }
        }
    }//GEN-LAST:event_btnsubmitActionPerformed

    private void txtcompanyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcompanyKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            txtcashamount.grabFocus();
            txtcashamount.selectAll();
        }
    }//GEN-LAST:event_txtcompanyKeyReleased

    private void txtnicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnicKeyPressed
        if (evt.getKeyCode() == 10) {
            txtfcontact1.grabFocus();
        }
    }//GEN-LAST:event_txtnicKeyPressed

    private void txtfirstnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfirstnameKeyReleased

        if (!txtfirstname.getText().isEmpty()) {
            loadSupplierbyFirstName();
        } else {
            clearSupplierAll();
            clearMainSupplier();
        }


    }//GEN-LAST:event_txtfirstnameKeyReleased

    private void tblbuzmanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblbuzmanMouseClicked
        if (evt.getClickCount() == 2) {

            if (tblbuzman.getRowCount() != 0) {
                setBuzmantoFields();
                txtfirstname.grabFocus();
            }
        }
    }//GEN-LAST:event_tblbuzmanMouseClicked

    private void txtcardamountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcardamountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcardamountActionPerformed

    private void txtcardamountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcardamountKeyReleased
        Validation.validatedouble(txtcardamount);

        if (!txtcardamount.getText().isEmpty()) {
            if (cmbpaymethod.getSelectedIndex() != 0) {
                AllFinalCalculations();
            } else {
                cmbpaymethod.grabFocus();
            }

        } else {
            clearCardamount();
            AllFinalCalculations();
        }
    }//GEN-LAST:event_txtcardamountKeyReleased

    private void cmbbanknameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbbanknameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbbanknameActionPerformed

    private void cmbchequedetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbchequedetailsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbchequedetailsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GrnPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GrnPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GrnPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GrnPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GrnPayment dialog = new GrnPayment(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncheque;
    private javax.swing.JButton btnclear;
    private javax.swing.JButton btnsubmit;
    private javax.swing.JComboBox cmbbankname;
    private javax.swing.JComboBox cmbchequedetails;
    private javax.swing.JComboBox cmbpaymethod;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblbalance;
    private javax.swing.JLabel lblbankname;
    private javax.swing.JLabel lblcashpay;
    private javax.swing.JLabel lblchequdetails;
    private javax.swing.JLabel lblchequeamount;
    private javax.swing.JLabel lblchequedate;
    private javax.swing.JLabel lblchequenetamount;
    private javax.swing.JLabel lblchequenum;
    private javax.swing.JLabel lblcompany;
    private javax.swing.JLabel lblcontact1;
    private javax.swing.JLabel lbldate;
    private javax.swing.JLabel lbldueamount;
    private javax.swing.JLabel lblfname;
    public javax.swing.JLabel lblgrandamount;
    private javax.swing.JLabel lblid;
    private javax.swing.JLabel lbllastname;
    private javax.swing.JLabel lblnic;
    private javax.swing.JLabel lblpaid;
    private javax.swing.JLabel lblpaymentmethod;
    private javax.swing.JTable tblbuzman;
    private javax.swing.JTable tblcheque;
    private javax.swing.JTextField txtbankcode;
    private javax.swing.JTextField txtcardamount;
    private javax.swing.JTextField txtcashamount;
    private javax.swing.JTextField txtchequeamount;
    private javax.swing.JTextField txtchequeno;
    public javax.swing.JTextField txtcompany;
    private javax.swing.JFormattedTextField txtfDate;
    private javax.swing.JFormattedTextField txtfchequedate;
    public javax.swing.JFormattedTextField txtfcontact1;
    public javax.swing.JTextField txtfirstname;
    public javax.swing.JTextField txtlastname;
    public javax.swing.JTextField txtnic;
    public javax.swing.JTextField txtsupid;
    // End of variables declaration//GEN-END:variables

    private void firstLoad() {
        txtfDate.setValue(new DateUp().getCurrentDate());
        cmbpaymethod.grabFocus();

    }

    private void feildsEnable() {
        if (cmbpaymethod.getSelectedIndex() == 1) {//credit only
            btncheque.setEnabled(false);
            txtcashamount.setEditable(false);
            txtcardamount.setEditable(false);
            lblchequenetamount.setText("0.0");
            txtcashamount.setText("0.0");
            txtcardamount.setText("0.0");
            DefaultTableModel tbl = (DefaultTableModel) tblcheque.getModel();
            tbl.setRowCount(0);

            lbldueamount.setText(lblgrandamount.getText().trim());

        } else if (cmbpaymethod.getSelectedIndex() == 2) { // cash payment
            btncheque.setEnabled(false);
            txtcashamount.setEditable(true);
            txtcardamount.setEditable(false);
            txtcashamount.setText("0.0");
            txtcardamount.setText("0.0");
            DefaultTableModel tbl = (DefaultTableModel) tblcheque.getModel();
            tbl.setRowCount(0);
        } else if (cmbpaymethod.getSelectedIndex() == 3) { // cheque only
            btncheque.setEnabled(true);
            txtcashamount.setEditable(false);
            txtcardamount.setEditable(false);
            txtcashamount.setText("0.0");
            txtcardamount.setText("0.0");

        } else if (cmbpaymethod.getSelectedIndex() == 4) { // card only
            btncheque.setEnabled(false);
            txtcashamount.setEditable(false);
            txtcardamount.setEditable(true);
            txtcashamount.setText("0.0");
            txtcardamount.setText("0.0");
            DefaultTableModel tbl = (DefaultTableModel) tblcheque.getModel();
            tbl.setRowCount(0);
        } else if (cmbpaymethod.getSelectedIndex() == 5) { // mutiple
            btncheque.setEnabled(true);
            txtcashamount.setEditable(true);
            txtcardamount.setEditable(true);
            txtcashamount.setText("0.0");
            txtcardamount.setText("0.0");
            DefaultTableModel tbl = (DefaultTableModel) tblcheque.getModel();
            tbl.setRowCount(0);
        }

    }

    private void clearMainSupplier() {
        try {
            txtsupid.setText("");
            txtfirstname.setText("");
            txtlastname.setText("");
            txtnic.setText("");
            txtfcontact1.setValue("");
            txtcompany.setText("");

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void clearSupplierAll() {
        try {
            DefaultTableModel tbl = (DefaultTableModel) tblbuzman.getModel();
            tbl.setRowCount(0);
            txtfirstname.grabFocus();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

//    private void addSupplierDetailstoTable() {
//        try {
//
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//
//    }
    private void addChequeDetailstoTable() {
        try {
            DefaultTableModel tb = (DefaultTableModel) tblcheque.getModel();

            String bank = cmbbankname.getSelectedItem().toString();
            String chequeno = txtchequeno.getText();
            String bnckcode = txtbankcode.getText();
            String chequedate = txtfchequedate.getText();
            String chequedetaisl = cmbchequedetails.getSelectedItem().toString();
            String chequeamount = txtchequeamount.getText();

            Object arr[] = {bank, chequeno, bnckcode, chequedate, chequedetaisl, chequeamount};

            tb.addRow(arr);

            CalculationChequeAmount();
            AllFinalCalculations();
            clearChequeDetails();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private double CalculationChequeAmount() {
        double cheamount = 0.0;
        try {
            if (tblcheque.getRowCount() != 0) {

                for (int i = 0; i < tblcheque.getRowCount(); i++) {

                    cheamount += Double.parseDouble(tblcheque.getValueAt(i, 5).toString());

                }

            }
            lblchequenetamount.setText(Format.decimal3.format(cheamount));
        } catch (Exception e) {
            e.printStackTrace();
        }
        return cheamount;
    }

    private void DeleteCheque() {
        try {
            DefaultTableModel tb = (DefaultTableModel) tblcheque.getModel();
            tb.removeRow(tblcheque.getSelectedRow());
            CalculationChequeAmount();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void LoadChequeDetailsintoFeilds() {
        try {

            cmbbankname.setSelectedItem(tblcheque.getValueAt(tblcheque.getSelectedRow(), 0));
            txtchequeno.setText(tblcheque.getValueAt(tblcheque.getSelectedRow(), 1).toString());
            txtbankcode.setText(tblcheque.getValueAt(tblcheque.getSelectedRow(), 2).toString());
            txtfchequedate.setValue(tblcheque.getValueAt(tblcheque.getSelectedRow(), 3).toString());
            cmbchequedetails.setSelectedItem(tblcheque.getValueAt(tblcheque.getSelectedRow(), 4).toString());
            txtchequeamount.setText(tblcheque.getValueAt(tblcheque.getSelectedRow(), 5).toString());
            DeleteCheque();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private boolean isnotAvilablethisCheque() {
        boolean bol = true;
        try {
            DefaultTableModel dft = (DefaultTableModel) tblcheque.getModel();

            for (int i = 0; i < tblcheque.getRowCount(); i++) {
                String bnkname = cmbbankname.getSelectedItem().toString();
                String cheaqno = txtchequeno.getText();

                if (bnkname.equals(tblcheque.getValueAt(i, 0)) && cheaqno.equals(tblcheque.getValueAt(i, 1))) {
                    Messages.warningjoption("This Cheque Already Exist in the Table. Please Check ! ");
                    bol = false;
                    break;
                } else {
                    bol = true;
                }

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        return bol;
    }

    private void clearChequeDetails() {
        txtchequeno.setText("");
        txtbankcode.setText("");
        txtfchequedate.setValue("");
        txtchequeamount.setText("0.0");
        cmbbankname.setSelectedIndex(0);
        cmbchequedetails.setSelectedIndex(0);
        cmbbankname.grabFocus();
    }

    public void AllFinalCalculations() {
        try {
            double grandamount = Double.valueOf(lblgrandamount.getText());

            if (grandamount > 0) {

                double chequeamount = 0.0;
                if (tblcheque.getRowCount() != 0) {
                    chequeamount = Double.valueOf(lblchequenetamount.getText());
                }

                double cash = Double.valueOf(txtcashamount.getText());
                double CArd = Double.valueOf(txtcardamount.getText());

                if (cmbpaymethod.getSelectedIndex() == 2) { // cash only

                    lblpaid.setText(String.valueOf(cash));
                    double last = grandamount - cash;
                    if (last > 0) { // due
                        lbldueamount.setText(String.valueOf(Format.decimal3.format(last)));
                        lblbalance.setText("0.0");
                    } else { //balance
                        double bal = cash - grandamount;
                        lblbalance.setText(String.valueOf(bal));
                        lbldueamount.setText("0.0");
                    }
/////////////////////////////////////////////////////////////////////////////////////////////////////////////
                } else if (cmbpaymethod.getSelectedIndex() == 3) { //  cheque only

                    lblpaid.setText(String.valueOf(chequeamount));
                    double last = grandamount - chequeamount;
                    if (last > 0) { // due
                        lbldueamount.setText(String.valueOf(Format.decimal3.format(last)));
                        lblbalance.setText("0.0");
                    } else { //balance
                        double bal = chequeamount - grandamount;
                        lblbalance.setText(String.valueOf(Format.decimal3.format(bal)));
                        lbldueamount.setText("0.0");
                    }
//////////////////////////////////////////////////////////////////////////////////////////////////////////////
                } else if (cmbpaymethod.getSelectedIndex() == 4) { // card only

                    lblpaid.setText(String.valueOf(CArd));
                    double last = grandamount - CArd;
                    if (last > 0) { // due
                        lbldueamount.setText(String.valueOf(Format.decimal3.format(last)));
                        lblbalance.setText("0.0");
                    } else { //balance
                        double bal = CArd - grandamount;
                        lblbalance.setText(String.valueOf(bal));
                        lbldueamount.setText("0.0");
                    }
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                } else if (cmbpaymethod.getSelectedIndex() == 5) { // multiple
                    double tot = cash + chequeamount + CArd;
//
                    lblpaid.setText(String.valueOf(tot));
                    double last = grandamount - tot;
                    if (last > 0) { // due
                        lbldueamount.setText(String.valueOf(Format.decimal3.format(last)));
                        lblbalance.setText("0.0");
                    } else { //balance
                        double bal = tot - grandamount;
                        lblbalance.setText(String.valueOf(Format.decimal3.format(bal)));
                        lbldueamount.setText("0.0");
                    }

                } else if (cmbpaymethod.getSelectedIndex() == 1) { // credit

                    double tot = cash + chequeamount + CArd;
//
                    lblpaid.setText(String.valueOf(tot));
                    double last = grandamount - tot;
                    if (last > 0) { // due
                        lbldueamount.setText(String.valueOf(Format.decimal3.format(last)));
                        lblbalance.setText("0.0");
                    } else { //balance
                        double bal = tot - grandamount;
                        lblbalance.setText(String.valueOf(Format.decimal3.format(bal)));
                        lbldueamount.setText("0.0");
                    }
                } else {
                    lblpaid.setText("0.0");
                    lblbalance.setText("0.0");
                    lbldueamount.setText("0.0");
                    txtcashamount.setText("0.0");
                    txtcardamount.setText("0.0");
                    lblchequenetamount.setText("0.0");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void clearCashamount() {

        lblpaid.setText("0.0");
        lblbalance.setText("0.0");
        lbldueamount.setText("0.0");
        txtcashamount.setText("0.0");
        txtcashamount.selectAll();

    }

    private void clearCardamount() {

        lblpaid.setText("0.0");
        lblbalance.setText("0.0");
        lbldueamount.setText("0.0");
        txtcardamount.setText("0.0");
        txtcardamount.selectAll();

    }

    private void clearAll() {

        int part = JOptionPane.showConfirmDialog(null, "Are you sure you want Clear All Details ? ", "Message", 0, 0);

        if (part == JOptionPane.YES_OPTION) {
            grn.grnpay = null;
            this.dispose();
        }

    }

    //<editor-fold defaultstate="collapsed" desc="comment">
    public void SavePayment(Connection con, String grnid, String buzman) throws Exception {

        String paymentregid = DBQueryEngine.GetMaxID("payment_reg");

        String datetime = txtfDate.getText().trim() + " " + DateUp.getCurrentTime();
        double dueamunt = Double.parseDouble(lbldueamount.getText());
        String status = "";
        if (dueamunt > 0) {
            status = ConstantData.Status_PENDING;
        } else if (dueamunt == 0) {
            status = ConstantData.Status_COMPLETE;
        }

        ////////payment reg
        model.DB2.putData("insert into payment_reg (id,date,section_id,type,total,status) "
                + " values ('" + paymentregid + "','" + datetime + "',"
                + "'" + grnid + "','GRN',"
                + "'" + lblgrandamount.getText() + "','" + status + "')");

        String payerid = buzman;
        String payertype = "Supplier";

        String paymethod = cmbpaymethod.getSelectedItem().toString();

        String paymentrecid = DBQueryEngine.GetMaxID("payment_rec");
        ////////payment rec
        model.DB2.putData("insert into payment_rec (id,user_id,payment_reg_id,branch_id,date,paytype,payer_id,payer_type,paid,balance,due,status) "
                + " values ('" + paymentrecid + "','" + grn.cmbstorekeep.getSelectedItem().toString().split("-")[0] + "',"
                + "'" + paymentregid + "','" + ConstantData.branchId + "',"
                + "Now(),'" + paymethod + "',"
                + "'" + payerid + "','" + payertype + "','" + lblpaid.getText() + "','" + lblbalance.getText() + "','" + lbldueamount.getText() + "',"
                + "'" + ConstantData.Status_COMPLETE + "')"); // status 5

//        String cashid = DBQueryEngine.GetMaxID("cash");
//        int chequeid = DBQueryEngine.GetMaxIDInt("cheque_details");
        if (cmbpaymethod.getSelectedIndex() == 2) { // cash

            ////////cash payment
            model.DB2.putData("insert into cash (payment_rec_id,detail,total,status) "
                    + " values ('" + paymentrecid + "',"
                    + "'GRN Cash','" + txtcashamount.getText() + "',"
                    + "'" + ConstantData.Status_COMPLETE + "')");

        } else if (cmbpaymethod.getSelectedIndex() == 4) { //card

            ////////card payment
            model.DB2.putData("insert into card (payment_rec_id,detail,total,status) "
                    + " values ('" + paymentrecid + "',"
                    + "'GRN Card Payment','" + txtcardamount.getText() + "',"
                    + "'" + ConstantData.Status_COMPLETE + "')");

        } else if (cmbpaymethod.getSelectedIndex() == 3) { // cheque

            for (int i = 0; i < tblcheque.getRowCount(); i++) {
                ////////cheque payment
                String bnk = tblcheque.getValueAt(i, 0).toString();
                String chequeno = tblcheque.getValueAt(i, 1).toString();
                String bnkcode = tblcheque.getValueAt(i, 2).toString();
                String chequedate = tblcheque.getValueAt(i, 3).toString();
                String details = tblcheque.getValueAt(i, 4).toString();
                String total = tblcheque.getValueAt(i, 5).toString();

                model.DB2.putData("insert into cheque_details (payment_rec_id,bank,chequeno,bankcode,cheque_date,details,total,status) "
                        + " values ('" + paymentrecid + "',"
                        + "'" + bnk + "','" + chequeno + "',"
                        + "'" + bnkcode + "','" + chequedate + "',"
                        + "'" + details + "','" + total + "',"
                        + "'" + ConstantData.Status_COMPLETE + "')");

            }

        } else if (cmbpaymethod.getSelectedIndex() == 5) { // multiple

            if (Double.parseDouble(txtcashamount.getText()) > 0) {// cash
                ////////cash payment
                model.DB2.putData("insert into cash (payment_rec_id,detail,total,status) "
                        + " values ('" + paymentrecid + "',"
                        + "'GRN Cash','" + txtcashamount.getText() + "',"
                        + "'" + ConstantData.Status_COMPLETE + "')");
            }

            if (Double.parseDouble(lblchequenetamount.getText()) > 0 && tblcheque.getRowCount() != 0) { // cheque
                for (int i = 0; i < tblcheque.getRowCount(); i++) {
                    ////////cheque payment
                    String bnk = tblcheque.getValueAt(i, 0).toString();
                    String chequeno = tblcheque.getValueAt(i, 1).toString();
                    String bnkcode = tblcheque.getValueAt(i, 2).toString();
                    String chequedate = tblcheque.getValueAt(i, 3).toString();
                    String details = tblcheque.getValueAt(i, 4).toString();
                    String total = tblcheque.getValueAt(i, 5).toString();

                    model.DB2.putData("insert into cheque_details (payment_rec_id,bank,chequeno,bankcode,cheque_date,details,total,status) "
                            + " values ('" + paymentrecid + "',"
                            + "'" + bnk + "','" + chequeno + "',"
                            + "'" + bnkcode + "','" + chequedate + "',"
                            + "'" + details + "','" + total + "',"
                            + "'" + ConstantData.Status_COMPLETE + "')");

                }
            }

            if (Double.parseDouble(txtcardamount.getText()) > 0) {
                ////////card payment
                model.DB2.putData("insert into card (payment_rec_id,detail,total,status) "
                        + " values ('" + paymentrecid + "',"
                        + "'GRN Card Payment','" + txtcardamount.getText() + "',"
                        + "'" + ConstantData.Status_COMPLETE + "')");
            }

        } else if (cmbpaymethod.getSelectedIndex() == 4) {// card payment
            ////////cash payment
            model.DB2.putData("insert into cash (payment_rec_id,detail,total,status) "
                    + " values ('" + paymentrecid + "',"
                    + "'GRN Card Payment','" + txtcashamount.getText() + "',"
                    + "'" + ConstantData.Status_COMPLETE + "')");

        }

        if (dueamunt > 0) {
            //String creditid = DBQueryEngine.GetMaxID("credit");
            ////////credit payment
            model.DB2.putData("insert into credit (payment_rec_id,date,paid,rem_tot,status) "
                    + " values ('" + paymentrecid + "',"
                    + "Now(),'" + lblpaid.getText() + "','" + lbldueamount.getText() + "',"
                    + "'" + ConstantData.Status_COMPLETE + "')");

        }

    }
//</editor-fold>

    private void loadSupplierbyFirstName() {
        try {
            DefaultTableModel tb = (DefaultTableModel) tblbuzman.getModel();
            tb.setRowCount(0);

            ResultSet rs = DB.getData("SELECT\n"
                    + "buz_man.id,\n"
                    + "buz_man.fname,\n"
                    + "buz_man.lname,\n"
                    + "buz_man.contact_1,\n"
                    + "buz_man.company\n"
                    + "FROM\n"
                    + "buz_man ,\n"
                    + "user_type\n"
                    + "WHERE\n"
                    + "buz_man.`status` = '1' AND\n"
                    + "buz_man.user_type_id = user_type.id AND\n"
                    + "user_type.type = 'Supplier' AND\n"
                    + "buz_man.fname  like '" + txtfirstname.getText().trim() + "%'");
            while (rs.next()) {

                String id = rs.getString(1);
                String name = rs.getString(2) + "_" + rs.getString(3);
                String contac = rs.getString(4);
                String company = rs.getString(5);

                Object arr[] = {id, name, contac, company};
                tb.addRow(arr);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setBuzmantoFields() {

        try {
            String id = tblbuzman.getValueAt(tblbuzman.getSelectedRow(), 0).toString();

            ResultSet rs = DB.getData("SELECT\n"
                    + "buz_man.id,\n"
                    + "buz_man.fname,\n"
                    + "buz_man.lname,\n"
                    + "buz_man.contact_1,\n"
                    + "buz_man.nic,\n"
                    + "buz_man.company\n"
                    + "FROM\n"
                    + "buz_man ,\n"
                    + "user_type\n"
                    + "WHERE\n"
                    + "buz_man.id = '" + id.trim() + "' AND\n"
                    + "buz_man.user_type_id = user_type.id AND\n"
                    + "user_type.type = 'Supplier'");

            if (rs.next()) {
                txtsupid.setText(rs.getString(1));
                txtfirstname.setText(rs.getString(2));
                txtlastname.setText(rs.getString(3));
                txtfcontact1.setText(rs.getString(4));
                txtnic.setText(rs.getString(5));
                txtcompany.setText(rs.getString(6));

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

}
